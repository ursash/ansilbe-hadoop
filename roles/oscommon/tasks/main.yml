---
- name: Load OS specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_os_family|lower }}{{ ansible_distribution_major_version }}.yml"

- name: "change hostname according to inventory file"
  shell: hostnamectl set-hostname {{inventory_hostname|quote}}

- name: "Add mappings to /etc/hosts"
  lineinfile:
    path: /etc/hosts
    regexp: "^{{ hostvars[item]['ansible_'~hostvars[item].ansible_default_ipv4.alias]['ipv4']['address'] }}.*"
    line: "{{ hostvars[item]['ansible_'~hostvars[item].ansible_default_ipv4.alias]['ipv4']['address'] }} {{ hostvars[item]['inventory_hostname'] }} {{ hostvars[item].inventory_hostname_short }}"
    insertafter: "^127..*$"
    state: present
  with_items:
    - "{{ groups['cdh']|sort(reverse=True) }}"

- name: "stop firewalld"
  service: name=firewalld state=stopped enabled=no

- name: "Disable SELinux"
  selinux: state=disabled

# install packages
- name: Ensure required packages are installed
  yum:
    name: "{{ packages }}"
    state: present
    disable_gpg_check: yes

- name: rngd service state
  service: name=rngd state=started enabled=yes

- name: Copy over the NTP configuration
  template: src=ntp.conf.j2 dest=/etc/ntp.conf

- name: ntpd service state
  service: name=ntpd state=started enabled=yes
  
- name: force ntp update
  shell: "ntpdate -u {{ ntpserver }};hwclock -w"
  when: ansible_fqdn != ntpserver
  ignore_errors: True

- name: set hwclock
  lineinfile: dest=/etc/sysconfig/ntpd
              line="SYNC_HWCLOCK=yes"

# start tune system
- name: Make sure /etc/security/limits.d exists
  file:
    path: /etc/security/limits.d
    mode: 0755
    state: directory

- name: Set nofile and nproc limits
  blockinfile:
    path: /etc/security/limits.d/99-hadoop.conf
    create: yes
    mode: 0644
    block: |
      * soft nofile 65535
      * hard nofile 65535
      * soft nproc 65535
      * hard nproc 65535
    marker: "# {mark} ANSIBLE MANAGED BLOCK"

- name: Set swappiness to 1
  sysctl:
    name: vm.swappiness
    value: 1
    state: present
    reload: yes
    ignoreerrors: yes
  
- name: Disable Transparent Huge Pages until the next reboot
  shell: echo never > /sys/kernel/mm/transparent_hugepage/enabled && echo never > /sys/kernel/mm/transparent_hugepage/defrag
  args:
    removes: /sys/kernel/mm/transparent_hugepage/enabled

- name: Disable Transparent Huge Pages in Grub 2
  lineinfile:
    path: /etc/default/grub
    state: present
    line: 'GRUB_CMDLINE_LINUX=$GRUB_CMDLINE_LINUX" transparent_hugepage=never"'
  notify: Generate the Grub config file

- meta: flush_handlers

- name: Configure tuned
  include_tasks: tuned.yml
  when: ansible_os_family|lower == "redhat" and ansible_distribution_major_version|int == 7  